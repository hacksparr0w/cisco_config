import os

from ipaddress import IPv4Address as Ipv4Address

import cisco_config.asa
import pytest

from cisco_config import Command
from cisco_config.asa.common import command, dsl


@pytest.mark.parametrize(
    "version, file_name, expected_commands",
    [
        (
            "9.20",
            "./asa.conf",
            [
                command.meta.AsaVersion(value="9.12(2)"),
                command.hostname.Hostname(value="ASA01"),
                command.password.EnablePassword(
                    value="*****",
                    encryption="pbkdf2"
                ),
                command.names.Names(),
                command.mac.DisableAutomaticMacAddress(),
                command.interface.Interface(
                    id="GigabitEthernet0/0",
                    name=[
                        command.interface.name.Name(value="OUTSIDE_VLAN10")
                    ],
                    description=[
                        command.interface.description.Description(
                            value=dsl.text.Text(content="to Intrnet")
                        )
                    ],
                    address=[
                        command.interface.ip.IpAddress(
                            address=Ipv4Address("172.16.100.1"),
                             mask=Ipv4Address("255.255.255.0")
                        )
                    ],
                    status=[command.interface.status.Shutdown()],
                    security=[
                        command.interface.security.SecurityLevel(value=0)
                    ]
                ),
                command.interface.Interface(
                    id="GigabitEthernet0/0.35",
                    name=[command.interface.name.Name(value="OUT")],
                    address=[
                        command.interface.ip.IpAddress(
                            address=Ipv4Address("19.12.76.9"),
                            mask=Ipv4Address("255.255.255.240")
                        )
                    ],
                    security=[
                        command.interface.security.SecurityLevel(value=0)
                    ],
                    vlan=[command.interface.vlan.Vlan(id=35)],
                ),
                command.interface.Interface(
                    id="GigabitEthernet0/0.36",
                    name=[
                        command.interface.name.Name(value="INS")
                    ],
                    description=[
                        command.interface.description.Description(
                            value=dsl.text.Text(content="TO Inside networks")
                        )
                    ],
                    address=[
                        command.interface.ip.IpAddress(
                            address=Ipv4Address("172.16.10.1"),
                            mask=Ipv4Address("255.255.255.0")
                        )
                    ],
                    security=[
                        command.interface.security.SecurityLevel(value=100)
                    ],
                    vlan=[command.interface.vlan.Vlan(id=36)]
                ),
                command.interface.Interface(
                    id="GigabitEthernet0/1",
                    name=[
                        command.interface.name.Name(value="DMZ1")
                    ],
                    address=[
                        command.interface.ip.IpAddress(
                            address=Ipv4Address("172.16.20.1"),
                            mask=Ipv4Address("255.255.252.0")
                        )
                    ],
                    security=[
                        command.interface.security.SecurityLevel(value=80)
                    ],
                    status=[command.interface.status.Shutdown()]
                ),
                command.interface.Interface(
                    id="GigabitEthernet0/2",
                    name=[command.interface.name.RemoveName()],
                    address=[command.interface.ip.RemoveIpAddress()],
                    security=[
                        command.interface.security.ResetSecurityLevel()
                    ],
                    status=[command.interface.status.Shutdown()]
                ),
                command.interface.Interface(
                    id="GigabitEthernet0/3",
                    name=[command.interface.name.RemoveName()],
                    address=[command.interface.ip.RemoveIpAddress()],
                    security=[
                        command.interface.security.ResetSecurityLevel()
                    ],
                    status=[command.interface.status.Shutdown()]
                ),
                command.interface.Interface(
                    id="GigabitEthernet0/4",
                    name=[command.interface.name.RemoveName()],
                    address=[command.interface.ip.RemoveIpAddress()],
                    security=[
                        command.interface.security.ResetSecurityLevel()
                    ],
                    status=[command.interface.status.Shutdown()]
                ),
                command.interface.Interface(
                    id="GigabitEthernet0/5",
                    name=[command.interface.name.RemoveName()],
                    address=[command.interface.ip.RemoveIpAddress()],
                    security=[
                        command.interface.security.ResetSecurityLevel()
                    ],
                    status=[command.interface.status.Shutdown()]
                ),
                command.interface.Interface(
                    id="GigabitEthernet0/6",
                    name=[command.interface.name.RemoveName()],
                    address=[command.interface.ip.RemoveIpAddress()],
                    security=[
                        command.interface.security.ResetSecurityLevel()
                    ],
                    status=[command.interface.status.Shutdown()]
                ),
                command.interface.Interface(
                    id="GigabitEthernet0/7",
                    name=[command.interface.name.RemoveName()],
                    address=[command.interface.ip.RemoveIpAddress()],
                    security=[
                        command.interface.security.ResetSecurityLevel()
                    ],
                    status=[command.interface.status.Shutdown()]
                ),
                command.interface.Interface(
                    id="GigabitEthernet0/8",
                    name=[command.interface.name.RemoveName()],
                    address=[command.interface.ip.RemoveIpAddress()],
                    security=[
                        command.interface.security.ResetSecurityLevel()
                    ],
                    status=[command.interface.status.Shutdown()]
                ),
                command.interface.Interface(
                    id="Management0/0",
                    name=[command.interface.name.Name(value="mgmt0")],
                    address=[
                        command.interface.ip.IpAddress(
                            address=Ipv4Address("192.168.10.35"),
                            mask=Ipv4Address("255.255.255.0")
                        )
                    ],
                    management=[
                        command.interface.management.ManagementOnly()
                    ],
                    security=[
                        command.interface.security.SecurityLevel(value=100)
                    ]
                ),
                command.banner.Banner(
                    type="login",
                    value=dsl.text.Text(content="")
                ),
                command.banner.Banner(
                    type="login",
                    value=dsl.text.Text(
                        content=(
                            "************************************************"
                            "*********************"
                        )
                    )
                ),
                command.banner.Banner(
                    type="login",
                    value=dsl.text.Text(content="Test Inc")
                ),
                command.banner.Banner(
                    type="login",
                    value=dsl.text.Text(
                        content=(
                            "NOTICE: This system should be used for "
                            "conducting Test Inc"
                        )
                    )
                ),
                command.banner.Banner(
                    type="login",
                    value=dsl.text.Text(
                        content=(
                            "business or for purposes authorized by Test Inc "
                            "management."
                        )
                    )
                ),
                command.banner.Banner(
                    type="login",
                    value=dsl.text.Text(
                        content=(
                            "It is mandatory to comply with all the "
                            "requirements listed"
                        )
                    )
                ),
                command.banner.Banner(
                    type="login",
                    value=dsl.text.Text(
                        content=(
                            "in the applicable security policy and only "
                            "process or"
                        )
                    )
                ),
                command.banner.Banner(
                    type="login",
                    value=dsl.text.Text(
                        content=(
                            "store the data classes approved for this asset "
                            "type."
                        )
                    )
                ),
                command.banner.Banner(
                    type="login",
                    value=dsl.text.Text(
                        content=(
                            "Use is subject to audit at any time by Test Inc "
                            "management."
                        )
                    )
                ),
                command.banner.Banner(
                    type="login",
                    value=dsl.text.Text(
                        content=(
                            "************************************************"
                            "*********************"
                        )
                    )
                ),
                command.banner.Banner(
                    type="login",
                    value=dsl.text.Text(content="")
                ),
                command.ftp.PassiveFtpMode(),
                command.object.network.NetworkObject(
                    name="NET_192.168.0.0_16"
                ),
                command.object.network.NetworkObject(
                    name="NET_192.169.0.0_16",
                    target=[
                        command.object.network.subnet.Subnet(
                            value=dsl.subnet.Ipv4Subnet(
                                address=Ipv4Address("192.169.0.0"),
                                mask=Ipv4Address("255.255.0.0")
                            )
                        )
                    ]
                ),
                command.object.network.NetworkObject(
                    name="NET_192.170.0.0_16",
                    target=[
                        command.object.network.subnet.Subnet(
                            value=dsl.subnet.Ipv4Subnet(
                                address=Ipv4Address("192.170.0.0"),
                                mask=Ipv4Address("255.255.0.0")
                            )
                        )
                    ]
                ),
                command.object.network.NetworkObject(
                    name="NET_192.171.0.0_16",
                    target=[
                        command.object.network.subnet.Subnet(
                            value=dsl.subnet.Ipv4Subnet(
                                address=Ipv4Address("192.171.0.0"),
                                mask=Ipv4Address("255.255.0.0")
                            )
                        )
                    ]
                ),
                command.object.network.NetworkObject(
                    name="NET_192.172.0.0_16",
                    target=[
                        command.object.network.subnet.Subnet(
                            value=dsl.subnet.Ipv4Subnet(
                                address=Ipv4Address("192.172.0.0"),
                                mask=Ipv4Address("255.255.0.0")
                            )
                        )
                    ]
                ),
                command.object.network.NetworkObject(
                    name="NET_192.173.0.0_16",
                    target=[
                        command.object.network.subnet.Subnet(
                            value=dsl.subnet.Ipv4Subnet(
                                address=Ipv4Address("192.173.0.0"),
                                mask=Ipv4Address("255.255.0.0")
                            )
                        )
                    ]
                ),
                command.object.network.NetworkObject(
                    name="NET_Testing01",
                    target=[
                        command.object.network.subnet.Subnet(
                            value=dsl.subnet.Ipv4Subnet(
                                address=Ipv4Address("192.174.0.0"),
                                mask=Ipv4Address("255.255.0.0")
                            )
                        )
                    ]
                ),
                command.object.network.NetworkObject(
                    name="NET_ThisIsReal_Network_For_VS",
                    target=[
                        command.object.network.subnet.Subnet(
                            value=dsl.subnet.Ipv4Subnet(
                                address=Ipv4Address("192.175.0.0"),
                                mask=Ipv4Address("255.255.0.0")
                            )
                        )
                    ]
                ),
                command.object.network.NetworkObject(
                    name="NET_192.176.0.0_16",
                    target=[
                        command.object.network.subnet.Subnet(
                            value=dsl.subnet.Ipv4Subnet(
                                address=Ipv4Address("192.176.0.0"),
                                mask=Ipv4Address("255.255.0.0")
                            )
                        )
                    ]
                ),
                command.object.network.NetworkObject(
                    name="NET_192.177.0.0_16",
                    target=[
                        command.object.network.subnet.Subnet(
                            value=dsl.subnet.Ipv4Subnet(
                                address=Ipv4Address("192.177.0.0"),
                                mask=Ipv4Address("255.255.0.0")
                            )
                        )
                    ]
                ),
                command.object_group.network.NetworkObjectGroup(
                    name="VPN_Test2",
                    children=[
                        command.object_group.network.object.NetworkObject(
                            target=dsl.object.Object(
                                name="NET_192.169.0.0_16"
                            )
                        ),
                        command.object_group.network.object.NetworkObject(
                            target=dsl.object.Object(
                                name="NET_192.170.0.0_16"
                            )
                        ),
                        command.object_group.network.object.NetworkObject(
                            target=dsl.object.Object(
                                name="NET_192.171.0.0_16"
                            )
                        ),
                        command.object_group.network.object.NetworkObject(
                            target=dsl.object.Object(
                                name="NET_192.172.0.0_16"
                            )
                        ),
                        command.object_group.network.object.NetworkObject(
                            target=dsl.object.Object(
                                name="NET_192.173.0.0_16"
                            )
                        ),
                        command.object_group.network.object.NetworkObject(
                            target=dsl.object.Object(
                                name="NET_Testing01"
                            )
                        ),
                        command.object_group.network.object.NetworkObject(
                            target=dsl.object.Object(
                                name="NET_ThisIsReal_Network_For_VS"
                            )
                        )
                    ]
                ),
                command.object_group.network.NetworkObjectGroup(
                    name="VPN_Shared_Infra",
                    children=[
                        command.object_group.network.object.NetworkObject(
                            target=dsl.object.Object(
                                name="NET_192.176.0.0_16"
                            )
                        ),
                        command.object_group.network.object.NetworkObject(
                            target=dsl.object.Object(
                                name="NET_192.177.0.0_16"
                            )
                        )
                    ]
                ),
                command.object_group.network.NetworkObjectGroup(
                    name="GRP01",
                    children=[
                        command.object_group.network.object.NetworkObject(
                            target=dsl.host.Host(
                                value=Ipv4Address("172.16.69.101")
                            )
                        ),
                        command.object_group.network.object.NetworkObject(
                            target=dsl.host.Host(
                                value=Ipv4Address("172.16.69.17")
                            )
                        )
                    ]
                ),
                command.object_group.network.NetworkObjectGroup(
                    name="GRP02",
                    children=[
                        command.object_group.network.object.NetworkObject(
                            target=dsl.host.Host(
                                value=Ipv4Address("172.17.34.117")
                            )
                        ),
                        command.object_group.network.object.NetworkObject(
                            target=dsl.host.Host(
                                value=Ipv4Address("172.17.34.118")
                            )
                        )
                    ]
                ),
                command.object_group.service.ServiceObjectGroup(
                    name="MGMT01",
                    children=[
                        command.object_group.service.object.ServiceObject(
                            target=dsl.service.L4Service(
                                protocol="tcp",
                                source=dsl.service.L4ServiceSource(
                                    value=dsl.op.Gt(value="1024")
                                ),
                                destination=dsl.service.L4ServiceDestination(
                                    value=dsl.op.Eq(value="ssh")
                                )
                            )
                        ),
                        command.object_group.service.object.ServiceObject(
                            target=dsl.service.L4Service(
                                protocol="udp",
                                destination=dsl.service.L4ServiceDestination(
                                    value=dsl.op.Eq(value="domain")
                                )
                            )
                        )
                    ]
                ),
                command.object_group.protocol.ProtocolObjectGroup(
                    name="PROTO01",
                    children=[
                        command.object_group.protocol.object.ProtocolObject(
                            target="tcp"
                        ),
                        command.object_group.protocol.object.ProtocolObject(
                            target="udp"
                        )
                    ]
                ),
                command.object_group.service.ServiceObjectGroup(
                    name="GRP_SVC01",
                    children=[
                        command.object_group.service.object.ServiceObject(
                            target=dsl.service.L4Service(
                                protocol="tcp",
                                source=dsl.service.L4ServiceSource(
                                    value=dsl.op.Gt(value="1024")
                                ),
                                destination=dsl.service.L4ServiceDestination(
                                    value=dsl.op.Eq(value="ssh")
                                )
                            )
                        ),
                        command.object_group.service.object.ServiceObject(
                            target=dsl.service.L4Service(
                                protocol="tcp",
                                source=dsl.service.L4ServiceSource(
                                    value=dsl.op.Gt(value="1024")
                                ),
                                destination=dsl.service.L4ServiceDestination(
                                    value=dsl.op.Eq(value="domain")
                                )
                            )
                        )
                    ]
                ),
                command.object_group.service.ServiceObjectGroup(
                    name="GRP_SVC02",
                    protocol="tcp",
                    children=[
                        command.object_group.service.object.PortObject(
                            target=dsl.op.Eq(value="ssh")
                        ),
                        command.object_group.service.object.PortObject(
                            target=dsl.op.Eq(value="domain")
                        )
                    ]
                ),
                command.object_group.service.ServiceObjectGroup(
                    name="GRP_SVC03",
                    protocol="tcp-udp",
                    children=[
                        command.object_group.service.object.PortObject(
                            target=dsl.op.Eq(value="22")
                        ),
                        command.object_group.service.object.PortObject(
                            target=dsl.op.Range(
                                start=1024,
                                stop=65535
                            )
                        )
                    ]
                ),
                command.access_list.extended.PortbasedExtendedAccessList(
                    name="GLBACL_IN",
                    action="permit",
                    protocol="ip",
                    source=dsl.object_group.ObjectGroup(name="VPN_Test2"),
                    destination=dsl.object_group.ObjectGroup(
                        name="VPN_Shared_Infra"
                    )
                ),
                command.access_list.extended.PortbasedExtendedAccessList(
                    name="GLBACL_IN",
                    action="permit",
                    protocol="tcp",
                    source=dsl.object_group.ObjectGroup(name="GRP01"),
                    destination=dsl.object_group.ObjectGroup(name="GRP02"),
                    destination_port=dsl.op.Eq(value="1416")
                ),
                command.access_list.extended.PortbasedExtendedAccessList(
                    name="GLBACL_IN",
                    action="permit",
                    protocol="udp",
                    source=dsl.object_group.ObjectGroup(name="GRP01"),
                    destination=dsl.object_group.ObjectGroup(name="GRP02"),
                    destination_port=dsl.op.Eq(value="1414")
                ),
                command.access_list.extended.PortbasedExtendedAccessList(
                    name="GLBACL_IN",
                    action="permit",
                    protocol=dsl.object_group.ObjectGroup(name="PROTO01"),
                    source=dsl.object_group.ObjectGroup(name="GRP01"),
                    destination=dsl.object_group.ObjectGroup(name="GRP02")
                ),
                command.access_list.extended.PortbasedExtendedAccessList(
                    name="GLBACL_IN",
                    action="permit",
                    protocol=dsl.object_group.ObjectGroup(name="MGMT01"),
                    source=dsl.object_group.ObjectGroup(name="GRP01"),
                    destination=dsl.object_group.ObjectGroup(name="GRP02")
                ),
                command.access_list.extended.PortbasedExtendedAccessList(
                    name="GLBACL_IN",
                    action="permit",
                    protocol="tcp",
                    source=dsl.object_group.ObjectGroup(name="GRP01"),
                    destination=dsl.object_group.ObjectGroup(name="GRP02"),
                    destination_port=dsl.object_group.ObjectGroup(
                        name="GRP_SVC02"
                    )
                ),
                command.access_list.extended.PortbasedExtendedAccessList(
                    name="GLBACL_IN",
                    action="permit",
                    protocol=dsl.object_group.ObjectGroup(name="PROTO01"),
                    source=dsl.object_group.ObjectGroup(name="GRP01"),
                    destination=dsl.object_group.ObjectGroup(name="GRP02"),
                    destination_port=dsl.object_group.ObjectGroup(
                        name="GRP_SVC03"
                    )
                ),
                command.access_list.extended.IcmpExtendedAccessList(
                    name="GLBACL_IN",
                    action="permit",
                    protocol="icmp",
                    source=dsl.host.Host(value=Ipv4Address("192.168.10.1")),
                    destination="any",
                    options=dsl.icmp.IcmpOptions(type="echo", code=0)
                ),
                command.access_list.extended.IcmpExtendedAccessList(
                    name="GLBACL_IN",
                    action="permit",
                    protocol="icmp",
                    source="any",
                    destination="any",
                    options=dsl.icmp.IcmpOptions(type="echo", code=0)
                ),
                command.access_list.extended.PortbasedExtendedAccessList(
                    name="GLBACL_IN",
                    action="deny",
                    protocol="ip",
                    source="any",
                    destination="any"
                ),
                command.access_list.extended.PortbasedExtendedAccessList(
                    name="VPN_TEST01_IPSEC",
                    action="permit",
                    protocol="ip",
                    source=dsl.object_group.ObjectGroup(name="VPN_Test2"),
                    destination=dsl.object_group.ObjectGroup(
                        name="VPN_Shared_Infra"
                    )
                ),
                command.pager.PagerLines(value=23)
            ]
        ),
    ]
)
def test(
    version: str,
    file_name: str,
    expected_commands: list[Command]
) -> None:
    path = os.path.join(
        os.path.dirname(os.path.realpath(__file__)),
        file_name
    )

    with open(path, "r", encoding="utf-8") as source:
        loaded_commands = cisco_config.asa.load(version, source, strict=False)
        pairs = zip(expected_commands, loaded_commands)

        for expected_command, loaded_command in pairs:
            assert expected_command == loaded_command
